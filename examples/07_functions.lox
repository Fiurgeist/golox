fun count(n) {
  if (n > 1) count(n - 1);
  print n;
}

print "recurcive counting";
count(3);

fun add(a, b, c) {
  print a + b + c;
}

print "add numbers:";
add(1, 2, 3);

fun foo(func) {
  func(1, 2, 3);
}

print "function pointer:";
foo(add);

print add;
print clock;
print clock();

fun outer() {
  print "outer start";
  fun inner() {
    print "inner";
    return;
  }
  inner();
  print "outer end";
  return;
}

outer();

fun count2(n) {
  while (n < 100) {
    if (n == 3) return n;
    print n;
    n = n + 1;
  }
}

print count2(1);

print "Fibonacci:";
fun fib(n) {
  if (n <= 1) return n;
  return fib(n - 2) + fib(n - 1);
}

var start = clock();
for (var i = 0; i < 20; i = i + 1) {
  print fib(i);
}
print "took:";
print clock() - start;

print "Closure:";
fun makeCounter() {
  var i = 0;
  fun count() {
    i = i + 1;
    print i;
  }

  return count;
}

var counter = makeCounter();
counter(); // "1".
counter(); // "2".
